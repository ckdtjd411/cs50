1. Computational Thinking, Scratch

1) 2진법
학습 목표 : 컴퓨터 과학이 무엇인지 정의하고, 컴퓨터가 정보를 표현하는 방법에 대해 설명할 수 있다.

#컴퓨터 과학
"강의를 듣기 전의 자신과 비교하여 얼마나 성장했는가?"

컴퓨터 과학은 문제 해결에 대한 학문
문제 해결은 입력(Input)을 전달받아 출력(Output)을 만들어내는 과정
그 중간에 있는 과정이 바로 컴퓨터 과학이다.

input → 컴퓨터과학 → output

이러한 입력과 출력을 표현하기 위해선 우선 모두가 동의할 약속(표준)이 필요
따라서 컴퓨터 과학의 가장 첫 번째 개념은 어떻게 표현하는지에 대한 표현 방법[정보 자체의 표현 방법]이다.

#2진법
일상에서 사용하는 0~9 총 10개의 기호로 표현하는 것이 10진법
컴퓨터는 오직 0과 1로만 데이터를 표현한다.
이처럼 0과 1로만 표현하는 것을 2진법이라 한다.
컴퓨터는 0과 1만으로 숫자뿐만 아니라 글자, 사진, 영상, 소리 등을 저장할 수 있는데 어떻게 가능한 것일까?

123 → '백이십삼'
'백이십삼'으로 읽는 이유는 1을 백의자리, 2를 십의자리, 3을 일의자리로 보기 때문
이것을 표현하면 '1x100 + 2x10 + 3x1 = 123'
우리 모두는 이런 과정을 아주 당연하게 여기는데 이러한 표현에 대한 약속이 있기 떄문이다.
우리는 이 약속에서 자리수를 10의 거듭제곱으로 표현
컴퓨터는 두 개의 숫자만 있으므로 10의 거듭제곱 대신 2의 거듭제곱을 사용한다.
2진법에서는 각 자리수가 2의 거듭제곱을 의미

10진법의 3을 2진법으로 표현하면?
2^1x1 + 1x1 = 3

이와 같은 2진법은 전기를 통해 연산하는, 즉 전기를 켜고 끄는 방식으로 작동하는 컴퓨터에게 적합한 방법이다.
컴퓨터에는 굉장히 많은 스위치(트렌지스터)가 있고 on/off 상태를 통해 0과 1을 표현한다.
이들을 물리적으로 이용해서 정보를 표현하고 값을 저장한다.
컴퓨터는 2진법에서 하나의 자릿수를 표현하는 단위를 비트(bit)라고 한다.

#비트열
하나의 비트는 0과 1, 이 두 가지의 값만 저장할 수 있다.
컴퓨터 내부에서 물리적으로 표현될 때는, 켜고 끌 수 있는 스위치라고 생각할 수 있다.(켜기=1, 끄기=)
하지만 비트 한 개는 많은 양의 데이터를 나타내기에 부족하므로 여러 숫자 조합을 컴퓨터에 나타내기 위해 비트열을 사용한다.
바이트(byte)는 여덟 개의 비트가 모여 만들어진 것.
하나의 바이트에 여덟 개의 비트가 있고, 비트 하나는 0과 1로 표현할 수 있기 때문에 2^8=256 개의 서로 다른 바이트가 존재할 수 있다.
더 큰 단위를 표현하기 위해 여러 개의 바이트를 사용

<bit>
0	off	 false
1	on	 true

단위			정의			저장공간 크기
비트(bit)		0 또는 1		예/아니오
바이트(byte)	8비트			영어 알파벳 한 개
킬로바이트(KB)	1,000바이트	몇 개의 문단
메가바이트(MB)	1,000킬로바이트	1분 길이의 MP3 노래
기가바이트(GB)	1,000메가바이트	30분 길이의 HD영화
테라바이트(TB)	1,000기가바이트	'심슨네 가족' 열 여섯 시즌

#생각해보기
Q : "5를 2진법으로 바꿔보면 어떻게 될까요?"
A : 101(2)
	2^2 x 1 + 2^1 x 0 + 2^1 x 1 = 5


2) 정보의 표현
학습 목표 : 컴퓨터가 문자, 사진, 영상, 음악 등 다양한 정보를 처리하는 방식을 설명할 수 있다.

#문자의 표현
우리는 알파벳의 문자나 글자 등을 어떻게 표현할지에 대해 모두 동의해야 한다.
컴퓨터가 수많은 스위치들을 끄고 켜서 숫자를 표현한다면 숫자가 아닌 문자는 어떻게 표현할까?
숫자로 표현하기를 모두가 동의하기만 하면 된다.
문자를 숫자로 표현 할 수 있도록 정해진 약속(표준)이 있다.

그 중 하나는 설명미국정보교환표준부호 ASCII(아스키코드/American Standard Code for Information Interchange)
총 128개의 부호로 정의

A를 지난 강의에서 배운 2진법으로 표현
10진법 기준으로 65이므로 2^6x1 + 2^5x0 + 2^4x0 + 2^3x0 + 2^2x0 + 2x0 + 1x1 (64+1)로 표현
따라서 A를 2진법으로 표현하면 10000001

Unicode
	그 당시 ASCII는 8개의 비트만을 사용했고 이는 문자들을 표현하기에 충분하지 않음.
	유니코드는 8이나 16, 24 혹은 32비트까지도 사용하므로 훨씬 더 많은 0과 1의 패턴들을 나타낼 수 있다.
	Unicode는 이모티콘까지 표현할 수 있다.

#그림, 영상, 음악의 표현
모든 색은 빨강, 초록, 파랑으로 이루어져 있고 이 3가지 색을 조합하면 어느 색이든 만들 수 있다.
사진은 수많은 작은 점들로 이루어져 있으며 컴퓨터는 각 점들을 RGB라고 불리는 체계로 표현한다.
이런 작은 점들을 픽셀이라고 부르며 각각의 픽셀은 세 가지 색을 서로 다른 비율로 조합하여 특정한 색을 갖게 된다.
이 숫자들을 표현하는 방식을 RGB(Red, Green, Blue)라고 한다.

그래픽을 사용하는 프로그램에서는 이 패턴을 숫자로 해석해서 빨강, 초록, 파랑의 양으로 받아들인다.
영상 또한 수많은 그림을 빠르게 연속적으로 이어 붙여놓은 것이기 때문에 숫자로 표현이 가능하다.
음악도 마찬가지로 각 음표를 숫자로 표현할 수 있다.

어떤 방법을 사용해서 정보를 나타내든 결국 0과 1들로 표현된다.

#생각해보기
Q : "CS50을 2진법으로 표현"
A :	문자  ASCII    2진표현
	 C 	  67	01000011
	 S	  83	01010011
	 5	  53	00110101
	 0	  48	00110000


3) 알고리즘
학습 목표
	1. 우리가 일상 생활에서 하는 일들을 컴퓨터가 이해할 수 있는 알고리즘으로 표현할 수 있ㄷ.
	2. 효율적인 알고리즘에 대해 설명할 수 있다.

#알고리즘
숫자, 글자, 색깔 등을 컴퓨터가 이해할 수 있는 2진법, 이것은 입력(input)에 해당하는 것.
input → algorithm → output

컴퓨팅은 입력을 받아 그 입력을 처리한 후 출력하는 과정
알고리즘은 입력(input)에서 받은 자료를 출력(output) 형태로 만드는 처리 과정을 뜻한다.

즉, 알고리즘이란 입력값을 출력값의 형태로 바꾸기 위해 어떤 명령들이 수행되어야 하는지에 대한 규칙들의 순서적 나열

이러한 일련의 순서적 규칙들을 어떻게 나열하는지에 따라 알고리즘의 종류가 달라진다.
같은 출력값이라도 알고리즘에 따라 출력을 하기까지의 시간이 다를 수 있다.

#정확한 알고리즘
예시) 전화번호부에서 Mike Smith를 찾는 일
전화번호부를 집어 들고 첫 페이지를 펼친 후 Mike Smith가 그 페이지에 있는지 찾는다.
없으면 그 다음페이지에서 찾는다.
Mike Smith를 찾을 때까지 혹은 전화번호부가 끝날 때까지 이것을 반복한다.
언젠가는 Mike Smith가 전화번호부에 있다면 이 알고리즘을 통해 Mike Smith를 찾을 수 있겠으나 이는 비효율적이다.

알고리즘을 평가할 때는 정확성도 중요하지만 효율성도 중요하다.
효율성은 작업을 완료하기까지 얼마나 시간과 노력을 덜 들일 수 있는지에 대한 것

#정확하고 효율적인 알고리즘
더 직관적이고 효율적인 알고리즘 사용
먼저, 전화번호부 가운데를 편다.
만약 Mike Smith가 그 페이지에 있다면 종료
없다면, 전화번호부가 이름순으로 정렬되어 있으므로 Mike Smith가 지금 페이지보다 앞부분에 있는지 뒷부분에 있는 알고 있으므로
책의 절반을 버릴 수 있게 되고 나머지 절반에 대해 똑같은 알고리즘을 수행한다.
한 페이지가 남을 때까지 계속 수행한다.

이 알고리즘은 기존 알고리즘보다 더 효율적.

첫 번째 알고리즘은 한 장을 넘긴 다음 또 한 장 넘기는 규칙들의 순서적 나열
두 번째 알고리즘은 반을 줄이고, 다음 또 반을 줄이는 규칙들의 순서적 나열

#의사코드 
위와 같은 알고리즘은 의사코드라는 방식으로 보다 명료하게 정리할 수 있다.
의사코드는 필요한 행동이나 조건을 잘 설정하여 컴퓨터가 수행해야 하는 일을 절차적으로 파악할 수 있게 도와준다.
생각을 간결하게 정리한 코드와 비슷한 구문

1. 전화번호부를 집어 든다
2. 전화번호부의 중간을 편다
3. 페이지를 본다
4. 만약 Mike Smith가 페이지에 있으면
5.	  Mike Smith에게 전화한다.
6. 그렇지 않고 만약 Mike Smith가 앞 페이지에 있으면
7.	  앞 페이지의 절반을 편다
8.	  3번째 줄부터 다시 실행한다
9. 그렇지 않고 만약 Mike Smith가 뒷 페이지에 있으면
10.	  뒷 페이지의 절반을 편다
11.	  3번째 줄부터 다시 실행한다
12. 그러지 않으면
13.	  그만둔다

들여쓰기는 종속 관계를 나타낸 것

함수(functions)는 컴퓨터에게 이 경우에는 사람이 무엇을 할지 알려주는 동사와 같다.
조건(condition)은 여러 선택지 중 하나를 고르는 것
불리언(Boolean) 답이 Yes(예) 또는 No(아니오) 혹은 True(참) 또는 False(거짓)으로 나오는 아니면 2진법에서 0 또는 1로 나오는 질문
루프(loop) 뭔가를 계속해서 반복하는 순환

#생각해보기
Q : "친구와 1부터 100까지 숫자 중 1가지 숫자를 맞추는 스무고개 게임을 하려고 한다. 이 때 사용할 알고리즘을 의사코드로 표현"
A :
	1. A는 1~100까지의 숫자 중 임의의 1가지 숫자를 선택한다.
	2. B는 숫자 하나를 골라 정답을 말한다.
		3. 2가 정답이면 종료
		4. 횟수를 1증가시킨다.
			5. 횟수가 20회가 되면 종료
		6. 2 실행
		


4) 스크래치: 기초
학습 목표 : 스크래치를 이용하여 간단한 알고리즘을 구현할 수 있다.

#스크래치
퍼즐 조각처럼 보이는 블럭들을 끌어 놓는 방식으로 연결시켜 컴퓨터가 무엇을 할지 단계적으로 프로그래밍할 수 있는 언어
화면 왼쪽에는 함수나 변수 등을 나타내는 퍼즐 조각, 오른쪽에는 알고리즘 결과나 보여지는 무대가 있다.

#스크래치 블록
블록의 종류에 따라서 프로그램이 수행하는 일의 종류가 달라진다.
입력이 주어졌을 때 블랙 박스를 거쳐 출력이 되는 컴퓨터의 작동 원리를 생각해보면, 하나의 블록이 블랙 박스의 역할을 하는 것
이러한 입력과 출력을 이어 붙여서 여러 작업을 순차적으로 수행할 수 있다.

오늘날의 스마트폰 컴퓨터와 같은 기계는 너무나도 빨라 수많은 일들을 매우 빠르게 해내서 출력된 결과를 확인하지 못할 수 있다.


5) 스크래치: 심화
학습 목표 : 스크래치를 이용하여 보다 복잡한 알고리즘을 구현할 수 있다.

#변수와 루프
변수를 사용하면 정보를 저장하고 다시 사용할 수 있다.
프로그래밍에서는 변수에 어떠한 값을 저장할 때 더욱 구체적인 이름을 붙여야 한다.

#변수와 조건문
조건문을 활용하면 더 복잡한 프로그램도 가능하다.
변수가 있을 때 질문 하나를 통해 값을 바꿀 수 있다.

프로그래밍에서는 병렬도 돌아가거나 반복되는 식으로 여러 작업을 동시에 수행할 수 있다.
그리고 변수와 같은 것들을 통해 서로 상호작용한다.

이벤트 : 프로그램끼리 주고받는 메시지

루프를 사용하면 여러 곳을 수정하는 대신 한 곳에서 모두 변경할 수 있다.

코드를 다른 프로그램에서도 사용하기 위해 스크래치에서 제공되지 않는 블록이라면 '나만의 블록'을 사용해 만들 수 있다.

추상화, 어떻게 구현했는지보다 기능에 중점
재활용 방식을 통해 코드를 훨씬 덜 복잡하고 더 짧게 만들 수 있으며 실수도 줄일 수 있다.